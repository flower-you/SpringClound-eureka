<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.abupdate.schedule.mapper.QuartzJobRecordMapper" >
  <resultMap id="BaseResultMap" type="com.abupdate.schedule.bean.QuartzJobRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="flag" property="flag" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from quartz_job_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.abupdate.schedule.bean.QuartzJobRecord" >
    insert into quartz_job_record (id, name, start_time, 
      end_time, flag, state
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.abupdate.schedule.bean.QuartzJobRecord" >
    update quartz_job_record
    set name = #{name,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, name, start_time, end_time, flag, state
    from quartz_job_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, start_time, end_time, flag, state
    from quartz_job_record
  </select>
</mapper>